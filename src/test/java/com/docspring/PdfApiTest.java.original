package com.docspring;

import com.docspring.ApiClient;
import com.docspring.AddFieldsData;
import com.docspring.AddFieldsTemplateResponse;
import com.docspring.AuthenticationError;
import com.docspring.AuthenticationSuccessResponse;
import com.docspring.CombinePdfsData;
import com.docspring.CombinedSubmission;
import com.docspring.CombinedSubmissionData;
import com.docspring.CopyTemplateData;
import com.docspring.CreateCombinedSubmissionResponse;
import com.docspring.CreateCustomFileData;
import com.docspring.CreateCustomFileResponse;
import com.docspring.CreateFolderData;
import com.docspring.CreateHtmlTemplateData;
import com.docspring.CreateSubmissionBatchResponse;
import com.docspring.CreateSubmissionDataRequestTokenResponse;
import com.docspring.CreateSubmissionResponse;
import com.docspring.CreateTemplateFromUploadData;
import com.docspring.Error;
import java.io.File;
import com.docspring.Folder;
import com.docspring.InvalidRequest;
import com.docspring.MoveFolderData;
import com.docspring.MoveTemplateData;
import com.docspring.PendingTemplate;
import com.docspring.RenameFolderData;
import com.docspring.Submission;
import com.docspring.SubmissionBatch;
import com.docspring.SubmissionBatchData;
import com.docspring.SubmissionData;
import com.docspring.SubmissionDataRequest;
import com.docspring.Template;
import com.docspring.UpdateDataRequestResponse;
import com.docspring.UpdateSubmissionDataRequestData;
import com.docspring.UpdateTemplateData;
import com.docspring.UpdateTemplateResponse;
import org.junit.Before;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PdfApi
 */
public class PdfApiTest {

    private PdfApi api;

    @Before
    public void setup() {
        api = new ApiClient().createService(PdfApi.class);
    }

    /**
     * Add new fields to a Template
     *
     * 
     */
    @Test
    public void addFieldsToTemplateTest() {
        String templateId = null;
        AddFieldsData addFieldsData = null;
        // AddFieldsTemplateResponse response = api.addFieldsToTemplate(templateId, addFieldsData);

        // TODO: test validations
    }
    /**
     * Generates multiple PDFs
     *
     * 
     */
    @Test
    public void batchGeneratePdfV1Test() {
        String templateId = null;
        List<Object> requestBody = null;
        // List<CreateSubmissionResponse> response = api.batchGeneratePdfV1(templateId, requestBody);

        // TODO: test validations
    }
    /**
     * Generates multiple PDFs
     *
     * 
     */
    @Test
    public void batchGeneratePdfsTest() {
        SubmissionBatchData submissionBatchData = null;
        // CreateSubmissionBatchResponse response = api.batchGeneratePdfs(submissionBatchData);

        // TODO: test validations
    }
    /**
     * Merge submission PDFs, template PDFs, or custom files
     *
     * 
     */
    @Test
    public void combinePdfsTest() {
        CombinePdfsData combinePdfsData = null;
        // CreateCombinedSubmissionResponse response = api.combinePdfs(combinePdfsData);

        // TODO: test validations
    }
    /**
     * Merge generated PDFs together
     *
     * 
     */
    @Test
    public void combineSubmissionsTest() {
        CombinedSubmissionData combinedSubmissionData = null;
        // CreateCombinedSubmissionResponse response = api.combineSubmissions(combinedSubmissionData);

        // TODO: test validations
    }
    /**
     * Copy a Template
     *
     * 
     */
    @Test
    public void copyTemplateTest() {
        String templateId = null;
        CopyTemplateData copyTemplateData = null;
        // Template response = api.copyTemplate(templateId, copyTemplateData);

        // TODO: test validations
    }
    /**
     * Create a new custom file from a cached presign upload
     *
     * 
     */
    @Test
    public void createCustomFileFromUploadTest() {
        CreateCustomFileData createCustomFileData = null;
        // CreateCustomFileResponse response = api.createCustomFileFromUpload(createCustomFileData);

        // TODO: test validations
    }
    /**
     * Creates a new data request token for form authentication
     *
     * 
     */
    @Test
    public void createDataRequestTokenTest() {
        String dataRequestId = null;
        // CreateSubmissionDataRequestTokenResponse response = api.createDataRequestToken(dataRequestId);

        // TODO: test validations
    }
    /**
     * Create a folder
     *
     * 
     */
    @Test
    public void createFolderTest() {
        CreateFolderData createFolderData = null;
        // Folder response = api.createFolder(createFolderData);

        // TODO: test validations
    }
    /**
     * Create a new HTML template
     *
     * 
     */
    @Test
    public void createHTMLTemplateTest() {
        CreateHtmlTemplateData createHtmlTemplateData = null;
        // PendingTemplate response = api.createHTMLTemplate(createHtmlTemplateData);

        // TODO: test validations
    }
    /**
     * Create a new PDF template with a form POST file upload
     *
     * 
     */
    @Test
    public void createPDFTemplateTest() {
        File templateDocument = null;
        String templateName = null;
        String templateParentFolderId = null;
        // PendingTemplate response = api.createPDFTemplate(templateDocument, templateName, templateParentFolderId);

        // TODO: test validations
    }
    /**
     * Create a new PDF template from a cached presign upload
     *
     * 
     */
    @Test
    public void createPDFTemplateFromUploadTest() {
        CreateTemplateFromUploadData createTemplateFromUploadData = null;
        // PendingTemplate response = api.createPDFTemplateFromUpload(createTemplateFromUploadData);

        // TODO: test validations
    }
    /**
     * Delete a folder
     *
     * 
     */
    @Test
    public void deleteFolderTest() {
        String folderId = null;
        // Folder response = api.deleteFolder(folderId);

        // TODO: test validations
    }
    /**
     * Expire a combined submission
     *
     * 
     */
    @Test
    public void expireCombinedSubmissionTest() {
        String combinedSubmissionId = null;
        // CombinedSubmission response = api.expireCombinedSubmission(combinedSubmissionId);

        // TODO: test validations
    }
    /**
     * Expire a PDF submission
     *
     * 
     */
    @Test
    public void expireSubmissionTest() {
        String submissionId = null;
        // Submission response = api.expireSubmission(submissionId);

        // TODO: test validations
    }
    /**
     * Generates a new PDF
     *
     * 
     */
    @Test
    public void generatePDFTest() {
        String templateId = null;
        SubmissionData submissionData = null;
        // CreateSubmissionResponse response = api.generatePDF(templateId, submissionData);

        // TODO: test validations
    }
    /**
     * Check the status of a combined submission (merged PDFs)
     *
     * 
     */
    @Test
    public void getCombinedSubmissionTest() {
        String combinedSubmissionId = null;
        // CombinedSubmission response = api.getCombinedSubmission(combinedSubmissionId);

        // TODO: test validations
    }
    /**
     * Look up a submission data request
     *
     * 
     */
    @Test
    public void getDataRequestTest() {
        String dataRequestId = null;
        // SubmissionDataRequest response = api.getDataRequest(dataRequestId);

        // TODO: test validations
    }
    /**
     * Get a presigned URL so that you can upload a file to our AWS S3 bucket
     *
     * 
     */
    @Test
    public void getPresignUrlTest() {
        // Map<String, Object> response = api.getPresignUrl();

        // TODO: test validations
    }
    /**
     * Check the status of a PDF
     *
     * 
     */
    @Test
    public void getSubmissionTest() {
        String submissionId = null;
        Boolean includeData = null;
        // Submission response = api.getSubmission(submissionId, includeData);

        // TODO: test validations
    }
    /**
     * Check the status of a submission batch job
     *
     * 
     */
    @Test
    public void getSubmissionBatchTest() {
        String submissionBatchId = null;
        Boolean includeSubmissions = null;
        // SubmissionBatch response = api.getSubmissionBatch(submissionBatchId, includeSubmissions);

        // TODO: test validations
    }
    /**
     * Get a single template
     *
     * 
     */
    @Test
    public void getTemplateTest() {
        String templateId = null;
        // Template response = api.getTemplate(templateId);

        // TODO: test validations
    }
    /**
     * Fetch the JSON schema for a template
     *
     * 
     */
    @Test
    public void getTemplateSchemaTest() {
        String templateId = null;
        // Map<String, Object> response = api.getTemplateSchema(templateId);

        // TODO: test validations
    }
    /**
     * Get a list of all folders
     *
     * 
     */
    @Test
    public void listFoldersTest() {
        String parentFolderId = null;
        // List<Folder> response = api.listFolders(parentFolderId);

        // TODO: test validations
    }
    /**
     * Get a list of all templates
     *
     * 
     */
    @Test
    public void listTemplatesTest() {
        String query = null;
        String parentFolderId = null;
        Integer page = null;
        Integer perPage = null;
        // List<Template> response = api.listTemplates(query, parentFolderId, page, perPage);

        // TODO: test validations
    }
    /**
     * Move a folder
     *
     * 
     */
    @Test
    public void moveFolderToFolderTest() {
        String folderId = null;
        MoveFolderData moveFolderData = null;
        // Folder response = api.moveFolderToFolder(folderId, moveFolderData);

        // TODO: test validations
    }
    /**
     * Move Template to folder
     *
     * 
     */
    @Test
    public void moveTemplateToFolderTest() {
        String templateId = null;
        MoveTemplateData moveTemplateData = null;
        // Template response = api.moveTemplateToFolder(templateId, moveTemplateData);

        // TODO: test validations
    }
    /**
     * Rename a folder
     *
     * 
     */
    @Test
    public void renameFolderTest() {
        String folderId = null;
        RenameFolderData renameFolderData = null;
        // api.renameFolder(folderId, renameFolderData);

        // TODO: test validations
    }
    /**
     * Test Authentication
     *
     * 
     */
    @Test
    public void testAuthenticationTest() {
        // AuthenticationSuccessResponse response = api.testAuthentication();

        // TODO: test validations
    }
    /**
     * Update a submission data request
     *
     * 
     */
    @Test
    public void updateDataRequestTest() {
        String dataRequestId = null;
        UpdateSubmissionDataRequestData updateSubmissionDataRequestData = null;
        // UpdateDataRequestResponse response = api.updateDataRequest(dataRequestId, updateSubmissionDataRequestData);

        // TODO: test validations
    }
    /**
     * Update a Template
     *
     * 
     */
    @Test
    public void updateTemplateTest() {
        String templateId = null;
        UpdateTemplateData updateTemplateData = null;
        // UpdateTemplateResponse response = api.updateTemplate(templateId, updateTemplateData);

        // TODO: test validations
    }
}
