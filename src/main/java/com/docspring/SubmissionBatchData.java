/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * SubmissionBatchData
 */
@JsonPropertyOrder({
  SubmissionBatchData.JSON_PROPERTY_METADATA,
  SubmissionBatchData.JSON_PROPERTY_SUBMISSIONS,
  SubmissionBatchData.JSON_PROPERTY_TEST
})
@JsonTypeName("submission_batch_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class SubmissionBatchData {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private Object metadata;

  public static final String JSON_PROPERTY_SUBMISSIONS = "submissions";
  @javax.annotation.Nonnull
  private List<Object> submissions = new ArrayList<>();

  public static final String JSON_PROPERTY_TEST = "test";
  @javax.annotation.Nullable
  private Boolean test;

  public SubmissionBatchData() { 
  }

  public SubmissionBatchData metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
  }


  public SubmissionBatchData submissions(@javax.annotation.Nonnull List<Object> submissions) {
    this.submissions = submissions;
    return this;
  }

  public SubmissionBatchData addSubmissionsItem(Object submissionsItem) {
    if (this.submissions == null) {
      this.submissions = new ArrayList<>();
    }
    this.submissions.add(submissionsItem);
    return this;
  }

  /**
   * Get submissions
   * @return submissions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getSubmissions() {
    return submissions;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissions(@javax.annotation.Nonnull List<Object> submissions) {
    this.submissions = submissions;
  }


  public SubmissionBatchData test(@javax.annotation.Nullable Boolean test) {
    this.test = test;
    return this;
  }

  /**
   * Get test
   * @return test
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTest() {
    return test;
  }


  @JsonProperty(JSON_PROPERTY_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTest(@javax.annotation.Nullable Boolean test) {
    this.test = test;
  }


  /**
   * Return true if this submission_batch_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionBatchData submissionBatchData = (SubmissionBatchData) o;
    return Objects.equals(this.metadata, submissionBatchData.metadata) &&
        Objects.equals(this.submissions, submissionBatchData.submissions) &&
        Objects.equals(this.test, submissionBatchData.test);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, submissions, test);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionBatchData {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    submissions: ").append(toIndentedString(submissions)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

