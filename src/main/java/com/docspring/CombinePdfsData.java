/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * CombinePdfsData
 */
@JsonPropertyOrder({
  CombinePdfsData.JSON_PROPERTY_DELETE_CUSTOM_FILES,
  CombinePdfsData.JSON_PROPERTY_EXPIRES_IN,
  CombinePdfsData.JSON_PROPERTY_METADATA,
  CombinePdfsData.JSON_PROPERTY_PASSWORD,
  CombinePdfsData.JSON_PROPERTY_SOURCE_PDFS,
  CombinePdfsData.JSON_PROPERTY_TEST
})
@JsonTypeName("combine_pdfs_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class CombinePdfsData {
  public static final String JSON_PROPERTY_DELETE_CUSTOM_FILES = "delete_custom_files";
  @javax.annotation.Nullable
  private Boolean deleteCustomFiles;

  public static final String JSON_PROPERTY_EXPIRES_IN = "expires_in";
  @javax.annotation.Nullable
  private Integer expiresIn;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private Object metadata;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  @javax.annotation.Nullable
  private String password;

  public static final String JSON_PROPERTY_SOURCE_PDFS = "source_pdfs";
  @javax.annotation.Nonnull
  private List<Object> sourcePdfs = new ArrayList<>();

  public static final String JSON_PROPERTY_TEST = "test";
  @javax.annotation.Nullable
  private Boolean test;

  public CombinePdfsData() { 
  }

  public CombinePdfsData deleteCustomFiles(@javax.annotation.Nullable Boolean deleteCustomFiles) {
    this.deleteCustomFiles = deleteCustomFiles;
    return this;
  }

  /**
   * Get deleteCustomFiles
   * @return deleteCustomFiles
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE_CUSTOM_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleteCustomFiles() {
    return deleteCustomFiles;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_CUSTOM_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteCustomFiles(@javax.annotation.Nullable Boolean deleteCustomFiles) {
    this.deleteCustomFiles = deleteCustomFiles;
  }


  public CombinePdfsData expiresIn(@javax.annotation.Nullable Integer expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  /**
   * Get expiresIn
   * @return expiresIn
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getExpiresIn() {
    return expiresIn;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiresIn(@javax.annotation.Nullable Integer expiresIn) {
    this.expiresIn = expiresIn;
  }


  public CombinePdfsData metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
  }


  public CombinePdfsData password(@javax.annotation.Nullable String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }


  public CombinePdfsData sourcePdfs(@javax.annotation.Nonnull List<Object> sourcePdfs) {
    this.sourcePdfs = sourcePdfs;
    return this;
  }

  public CombinePdfsData addSourcePdfsItem(Object sourcePdfsItem) {
    if (this.sourcePdfs == null) {
      this.sourcePdfs = new ArrayList<>();
    }
    this.sourcePdfs.add(sourcePdfsItem);
    return this;
  }

  /**
   * Get sourcePdfs
   * @return sourcePdfs
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_PDFS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getSourcePdfs() {
    return sourcePdfs;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_PDFS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourcePdfs(@javax.annotation.Nonnull List<Object> sourcePdfs) {
    this.sourcePdfs = sourcePdfs;
  }


  public CombinePdfsData test(@javax.annotation.Nullable Boolean test) {
    this.test = test;
    return this;
  }

  /**
   * Get test
   * @return test
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTest() {
    return test;
  }


  @JsonProperty(JSON_PROPERTY_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTest(@javax.annotation.Nullable Boolean test) {
    this.test = test;
  }


  /**
   * Return true if this combine_pdfs_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CombinePdfsData combinePdfsData = (CombinePdfsData) o;
    return Objects.equals(this.deleteCustomFiles, combinePdfsData.deleteCustomFiles) &&
        Objects.equals(this.expiresIn, combinePdfsData.expiresIn) &&
        Objects.equals(this.metadata, combinePdfsData.metadata) &&
        Objects.equals(this.password, combinePdfsData.password) &&
        Objects.equals(this.sourcePdfs, combinePdfsData.sourcePdfs) &&
        Objects.equals(this.test, combinePdfsData.test);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteCustomFiles, expiresIn, metadata, password, sourcePdfs, test);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CombinePdfsData {\n");
    sb.append("    deleteCustomFiles: ").append(toIndentedString(deleteCustomFiles)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    sourcePdfs: ").append(toIndentedString(sourcePdfs)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

