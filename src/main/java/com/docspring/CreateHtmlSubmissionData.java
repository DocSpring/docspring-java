/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * CreateHtmlSubmissionData
 */
@JsonPropertyOrder({
  CreateHtmlSubmissionData.JSON_PROPERTY_CSS,
  CreateHtmlSubmissionData.JSON_PROPERTY_DATA,
  CreateHtmlSubmissionData.JSON_PROPERTY_EDITABLE,
  CreateHtmlSubmissionData.JSON_PROPERTY_EXPIRES_IN,
  CreateHtmlSubmissionData.JSON_PROPERTY_FIELD_OVERRIDES,
  CreateHtmlSubmissionData.JSON_PROPERTY_HTML,
  CreateHtmlSubmissionData.JSON_PROPERTY_METADATA,
  CreateHtmlSubmissionData.JSON_PROPERTY_PASSWORD,
  CreateHtmlSubmissionData.JSON_PROPERTY_TEST
})
@JsonTypeName("create_html_submission_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class CreateHtmlSubmissionData {
  public static final String JSON_PROPERTY_CSS = "css";
  @javax.annotation.Nullable
  private String css;

  public static final String JSON_PROPERTY_DATA = "data";
  @javax.annotation.Nullable
  private Object data;

  public static final String JSON_PROPERTY_EDITABLE = "editable";
  @javax.annotation.Nullable
  private Boolean editable;

  public static final String JSON_PROPERTY_EXPIRES_IN = "expires_in";
  @javax.annotation.Nullable
  private Integer expiresIn;

  public static final String JSON_PROPERTY_FIELD_OVERRIDES = "field_overrides";
  @javax.annotation.Nullable
  private Object fieldOverrides;

  public static final String JSON_PROPERTY_HTML = "html";
  @javax.annotation.Nullable
  private String html;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private Object metadata;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  @javax.annotation.Nullable
  private String password;

  public static final String JSON_PROPERTY_TEST = "test";
  @javax.annotation.Nullable
  private Boolean test;

  public CreateHtmlSubmissionData() { 
  }

  public CreateHtmlSubmissionData css(@javax.annotation.Nullable String css) {
    this.css = css;
    return this;
  }

  /**
   * Get css
   * @return css
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCss() {
    return css;
  }


  @JsonProperty(JSON_PROPERTY_CSS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCss(@javax.annotation.Nullable String css) {
    this.css = css;
  }


  public CreateHtmlSubmissionData data(@javax.annotation.Nullable Object data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(@javax.annotation.Nullable Object data) {
    this.data = data;
  }


  public CreateHtmlSubmissionData editable(@javax.annotation.Nullable Boolean editable) {
    this.editable = editable;
    return this;
  }

  /**
   * Get editable
   * @return editable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EDITABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEditable() {
    return editable;
  }


  @JsonProperty(JSON_PROPERTY_EDITABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditable(@javax.annotation.Nullable Boolean editable) {
    this.editable = editable;
  }


  public CreateHtmlSubmissionData expiresIn(@javax.annotation.Nullable Integer expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  /**
   * Get expiresIn
   * @return expiresIn
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getExpiresIn() {
    return expiresIn;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiresIn(@javax.annotation.Nullable Integer expiresIn) {
    this.expiresIn = expiresIn;
  }


  public CreateHtmlSubmissionData fieldOverrides(@javax.annotation.Nullable Object fieldOverrides) {
    this.fieldOverrides = fieldOverrides;
    return this;
  }

  /**
   * Get fieldOverrides
   * @return fieldOverrides
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_OVERRIDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getFieldOverrides() {
    return fieldOverrides;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_OVERRIDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldOverrides(@javax.annotation.Nullable Object fieldOverrides) {
    this.fieldOverrides = fieldOverrides;
  }


  public CreateHtmlSubmissionData html(@javax.annotation.Nullable String html) {
    this.html = html;
    return this;
  }

  /**
   * Get html
   * @return html
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHtml() {
    return html;
  }


  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHtml(@javax.annotation.Nullable String html) {
    this.html = html;
  }


  public CreateHtmlSubmissionData metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
  }


  public CreateHtmlSubmissionData password(@javax.annotation.Nullable String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }


  public CreateHtmlSubmissionData test(@javax.annotation.Nullable Boolean test) {
    this.test = test;
    return this;
  }

  /**
   * Get test
   * @return test
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTest() {
    return test;
  }


  @JsonProperty(JSON_PROPERTY_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTest(@javax.annotation.Nullable Boolean test) {
    this.test = test;
  }


  /**
   * Return true if this create_html_submission_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateHtmlSubmissionData createHtmlSubmissionData = (CreateHtmlSubmissionData) o;
    return Objects.equals(this.css, createHtmlSubmissionData.css) &&
        Objects.equals(this.data, createHtmlSubmissionData.data) &&
        Objects.equals(this.editable, createHtmlSubmissionData.editable) &&
        Objects.equals(this.expiresIn, createHtmlSubmissionData.expiresIn) &&
        Objects.equals(this.fieldOverrides, createHtmlSubmissionData.fieldOverrides) &&
        Objects.equals(this.html, createHtmlSubmissionData.html) &&
        Objects.equals(this.metadata, createHtmlSubmissionData.metadata) &&
        Objects.equals(this.password, createHtmlSubmissionData.password) &&
        Objects.equals(this.test, createHtmlSubmissionData.test);
  }

  @Override
  public int hashCode() {
    return Objects.hash(css, data, editable, expiresIn, fieldOverrides, html, metadata, password, test);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateHtmlSubmissionData {\n");
    sb.append("    css: ").append(toIndentedString(css)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    fieldOverrides: ").append(toIndentedString(fieldOverrides)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

