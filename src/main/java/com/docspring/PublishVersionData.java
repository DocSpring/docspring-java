/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * PublishVersionData
 */
@JsonPropertyOrder({
  PublishVersionData.JSON_PROPERTY_DESCRIPTION,
  PublishVersionData.JSON_PROPERTY_VERSION_TYPE
})
@JsonTypeName("publish_version_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class PublishVersionData {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_VERSION_TYPE = "version_type";
  @javax.annotation.Nonnull
  private String versionType;

  public PublishVersionData() { 
  }

  public PublishVersionData description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public PublishVersionData versionType(@javax.annotation.Nonnull String versionType) {
    this.versionType = versionType;
    return this;
  }

  /**
   * Get versionType
   * @return versionType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersionType() {
    return versionType;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersionType(@javax.annotation.Nonnull String versionType) {
    this.versionType = versionType;
  }


  /**
   * Return true if this publish_version_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublishVersionData publishVersionData = (PublishVersionData) o;
    return Objects.equals(this.description, publishVersionData.description) &&
        Objects.equals(this.versionType, publishVersionData.versionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, versionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublishVersionData {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    versionType: ").append(toIndentedString(versionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

