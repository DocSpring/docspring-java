/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * UpdateSubmissionDataRequestData
 */
@JsonPropertyOrder({
  UpdateSubmissionDataRequestData.JSON_PROPERTY_AUTH_TYPE,
  UpdateSubmissionDataRequestData.JSON_PROPERTY_FIELDS,
  UpdateSubmissionDataRequestData.JSON_PROPERTY_METADATA,
  UpdateSubmissionDataRequestData.JSON_PROPERTY_ORDER
})
@JsonTypeName("update_submission_data_request_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class UpdateSubmissionDataRequestData {
  /**
   * Gets or Sets authType
   */
  public enum AuthTypeEnum {
    NONE(String.valueOf("none")),
    
    PASSWORD(String.valueOf("password")),
    
    OAUTH(String.valueOf("oauth")),
    
    EMAIL_LINK(String.valueOf("email_link")),
    
    PHONE_NUMBER(String.valueOf("phone_number")),
    
    LDAP(String.valueOf("ldap")),
    
    SAML(String.valueOf("saml"));

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthTypeEnum fromValue(String value) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTH_TYPE = "auth_type";
  @javax.annotation.Nullable
  private AuthTypeEnum authType;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  @javax.annotation.Nullable
  private List<String> fields = new ArrayList<>();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private Object metadata;

  public static final String JSON_PROPERTY_ORDER = "order";
  @javax.annotation.Nullable
  private Integer order;

  public UpdateSubmissionDataRequestData() { 
  }

  public UpdateSubmissionDataRequestData authType(@javax.annotation.Nullable AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

  /**
   * Get authType
   * @return authType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthTypeEnum getAuthType() {
    return authType;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthType(@javax.annotation.Nullable AuthTypeEnum authType) {
    this.authType = authType;
  }


  public UpdateSubmissionDataRequestData fields(@javax.annotation.Nullable List<String> fields) {
    this.fields = fields;
    return this;
  }

  public UpdateSubmissionDataRequestData addFieldsItem(String fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(@javax.annotation.Nullable List<String> fields) {
    this.fields = fields;
  }


  public UpdateSubmissionDataRequestData metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
  }


  public UpdateSubmissionDataRequestData order(@javax.annotation.Nullable Integer order) {
    this.order = order;
    return this;
  }

  /**
   * Get order
   * @return order
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(@javax.annotation.Nullable Integer order) {
    this.order = order;
  }


  /**
   * Return true if this update_submission_data_request_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSubmissionDataRequestData updateSubmissionDataRequestData = (UpdateSubmissionDataRequestData) o;
    return Objects.equals(this.authType, updateSubmissionDataRequestData.authType) &&
        Objects.equals(this.fields, updateSubmissionDataRequestData.fields) &&
        Objects.equals(this.metadata, updateSubmissionDataRequestData.metadata) &&
        Objects.equals(this.order, updateSubmissionDataRequestData.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authType, fields, metadata, order);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSubmissionDataRequestData {\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

