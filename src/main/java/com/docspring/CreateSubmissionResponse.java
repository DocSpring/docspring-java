/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.docspring.SubmissionPreview;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * CreateSubmissionResponse
 */
@JsonPropertyOrder({
  CreateSubmissionResponse.JSON_PROPERTY_STATUS,
  CreateSubmissionResponse.JSON_PROPERTY_SUBMISSION,
  CreateSubmissionResponse.JSON_PROPERTY_ERRORS
})
@JsonTypeName("create_submission_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class CreateSubmissionResponse {
  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SUCCESS(String.valueOf("success")),
    
    ERROR(String.valueOf("error"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private StatusEnum status;

  public static final String JSON_PROPERTY_SUBMISSION = "submission";
  @javax.annotation.Nonnull
  private SubmissionPreview submission;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  @javax.annotation.Nullable
  private List<String> errors = new ArrayList<>();

  public CreateSubmissionResponse() { 
  }

  public CreateSubmissionResponse status(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }


  public CreateSubmissionResponse submission(@javax.annotation.Nonnull SubmissionPreview submission) {
    this.submission = submission;
    return this;
  }

  /**
   * Get submission
   * @return submission
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SubmissionPreview getSubmission() {
    return submission;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmission(@javax.annotation.Nonnull SubmissionPreview submission) {
    this.submission = submission;
  }


  public CreateSubmissionResponse errors(@javax.annotation.Nullable List<String> errors) {
    this.errors = errors;
    return this;
  }

  public CreateSubmissionResponse addErrorsItem(String errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(@javax.annotation.Nullable List<String> errors) {
    this.errors = errors;
  }


  /**
   * Return true if this create_submission_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSubmissionResponse createSubmissionResponse = (CreateSubmissionResponse) o;
    return Objects.equals(this.status, createSubmissionResponse.status) &&
        Objects.equals(this.submission, createSubmissionResponse.submission) &&
        Objects.equals(this.errors, createSubmissionResponse.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, submission, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSubmissionResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submission: ").append(toIndentedString(submission)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

