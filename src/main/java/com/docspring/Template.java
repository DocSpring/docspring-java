/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * Template
 */
@JsonPropertyOrder({
  Template.JSON_PROPERTY_ADD_DATA_REQUEST_SUBMISSION_ID_FOOTERS,
  Template.JSON_PROPERTY_ALLOW_ADDITIONAL_PROPERTIES,
  Template.JSON_PROPERTY_DESCRIPTION,
  Template.JSON_PROPERTY_DOCUMENT_FILENAME,
  Template.JSON_PROPERTY_DOCUMENT_MD5,
  Template.JSON_PROPERTY_DOCUMENT_PARSE_ERROR,
  Template.JSON_PROPERTY_DOCUMENT_PROCESSED,
  Template.JSON_PROPERTY_DOCUMENT_STATE,
  Template.JSON_PROPERTY_DOCUMENT_URL,
  Template.JSON_PROPERTY_EDITABLE_SUBMISSIONS,
  Template.JSON_PROPERTY_EMBED_DOMAINS,
  Template.JSON_PROPERTY_ENCRYPT_PDFS_PASSWORD,
  Template.JSON_PROPERTY_ENCRYPT_PDFS,
  Template.JSON_PROPERTY_EXPIRATION_INTERVAL,
  Template.JSON_PROPERTY_EXPIRE_AFTER,
  Template.JSON_PROPERTY_EXPIRE_SUBMISSIONS,
  Template.JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_ID,
  Template.JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_NAME,
  Template.JSON_PROPERTY_FIRST_TEMPLATE,
  Template.JSON_PROPERTY_ID,
  Template.JSON_PROPERTY_LOCKED,
  Template.JSON_PROPERTY_MERGE_AUDIT_TRAIL_PDF,
  Template.JSON_PROPERTY_NAME,
  Template.JSON_PROPERTY_PAGE_COUNT,
  Template.JSON_PROPERTY_PAGE_DIMENSIONS,
  Template.JSON_PROPERTY_PARENT_FOLDER_ID,
  Template.JSON_PROPERTY_PATH,
  Template.JSON_PROPERTY_PERMANENT_DOCUMENT_URL,
  Template.JSON_PROPERTY_PUBLIC_SUBMISSIONS,
  Template.JSON_PROPERTY_PUBLIC_WEB_FORM,
  Template.JSON_PROPERTY_REDIRECT_URL,
  Template.JSON_PROPERTY_SLACK_WEBHOOK_URL,
  Template.JSON_PROPERTY_TEMPLATE_TYPE,
  Template.JSON_PROPERTY_UPDATED_AT,
  Template.JSON_PROPERTY_WEBHOOK_URL,
  Template.JSON_PROPERTY_DEMO,
  Template.JSON_PROPERTY_DEFAULTS,
  Template.JSON_PROPERTY_FIELD_ORDER,
  Template.JSON_PROPERTY_FIELDS,
  Template.JSON_PROPERTY_FOOTER_HTML,
  Template.JSON_PROPERTY_HEADER_HTML,
  Template.JSON_PROPERTY_HTML_ENGINE_OPTIONS,
  Template.JSON_PROPERTY_HTML,
  Template.JSON_PROPERTY_PREDEFINED_FIELDS,
  Template.JSON_PROPERTY_SCSS,
  Template.JSON_PROPERTY_SHARED_FIELD_DATA
})
@JsonTypeName("template")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class Template {
  public static final String JSON_PROPERTY_ADD_DATA_REQUEST_SUBMISSION_ID_FOOTERS = "add_data_request_submission_id_footers";
  @javax.annotation.Nonnull
  private Boolean addDataRequestSubmissionIdFooters;

  public static final String JSON_PROPERTY_ALLOW_ADDITIONAL_PROPERTIES = "allow_additional_properties";
  @javax.annotation.Nonnull
  private Boolean allowAdditionalProperties;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_DOCUMENT_FILENAME = "document_filename";
  @javax.annotation.Nullable
  private String documentFilename;

  public static final String JSON_PROPERTY_DOCUMENT_MD5 = "document_md5";
  @javax.annotation.Nullable
  private String documentMd5;

  public static final String JSON_PROPERTY_DOCUMENT_PARSE_ERROR = "document_parse_error";
  @javax.annotation.Nonnull
  private Boolean documentParseError;

  public static final String JSON_PROPERTY_DOCUMENT_PROCESSED = "document_processed";
  @javax.annotation.Nonnull
  private Boolean documentProcessed;

  /**
   * Gets or Sets documentState
   */
  public enum DocumentStateEnum {
    PENDING(String.valueOf("pending")),
    
    PROCESSED(String.valueOf("processed")),
    
    PASSWORD_REQUIRED(String.valueOf("password_required")),
    
    MALFORMED_PDF(String.valueOf("malformed_pdf")),
    
    UNKNOWN_ERROR(String.valueOf("unknown_error"));

    private String value;

    DocumentStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocumentStateEnum fromValue(String value) {
      for (DocumentStateEnum b : DocumentStateEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DOCUMENT_STATE = "document_state";
  @javax.annotation.Nonnull
  private DocumentStateEnum documentState;

  public static final String JSON_PROPERTY_DOCUMENT_URL = "document_url";
  @javax.annotation.Nullable
  private String documentUrl;

  public static final String JSON_PROPERTY_EDITABLE_SUBMISSIONS = "editable_submissions";
  @javax.annotation.Nonnull
  private Boolean editableSubmissions;

  public static final String JSON_PROPERTY_EMBED_DOMAINS = "embed_domains";
  @javax.annotation.Nullable
  private String embedDomains;

  public static final String JSON_PROPERTY_ENCRYPT_PDFS_PASSWORD = "encrypt_pdfs_password";
  @javax.annotation.Nullable
  private String encryptPdfsPassword;

  public static final String JSON_PROPERTY_ENCRYPT_PDFS = "encrypt_pdfs";
  @javax.annotation.Nonnull
  private Boolean encryptPdfs;

  public static final String JSON_PROPERTY_EXPIRATION_INTERVAL = "expiration_interval";
  @javax.annotation.Nonnull
  private String expirationInterval;

  public static final String JSON_PROPERTY_EXPIRE_AFTER = "expire_after";
  @javax.annotation.Nonnull
  private Integer expireAfter;

  public static final String JSON_PROPERTY_EXPIRE_SUBMISSIONS = "expire_submissions";
  @javax.annotation.Nonnull
  private Boolean expireSubmissions;

  public static final String JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_ID = "external_predefined_fields_template_id";
  @javax.annotation.Nullable
  private String externalPredefinedFieldsTemplateId;

  public static final String JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_NAME = "external_predefined_fields_template_name";
  @javax.annotation.Nullable
  private String externalPredefinedFieldsTemplateName;

  public static final String JSON_PROPERTY_FIRST_TEMPLATE = "first_template";
  @javax.annotation.Nonnull
  private Boolean firstTemplate;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  @javax.annotation.Nonnull
  private Boolean locked;

  public static final String JSON_PROPERTY_MERGE_AUDIT_TRAIL_PDF = "merge_audit_trail_pdf";
  @javax.annotation.Nonnull
  private Boolean mergeAuditTrailPdf;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_PAGE_COUNT = "page_count";
  @javax.annotation.Nonnull
  private Integer pageCount;

  public static final String JSON_PROPERTY_PAGE_DIMENSIONS = "page_dimensions";
  @javax.annotation.Nullable
  private List<List<BigDecimal>> pageDimensions;

  public static final String JSON_PROPERTY_PARENT_FOLDER_ID = "parent_folder_id";
  @javax.annotation.Nullable
  private String parentFolderId;

  public static final String JSON_PROPERTY_PATH = "path";
  @javax.annotation.Nullable
  private String path;

  public static final String JSON_PROPERTY_PERMANENT_DOCUMENT_URL = "permanent_document_url";
  @javax.annotation.Nullable
  private String permanentDocumentUrl;

  public static final String JSON_PROPERTY_PUBLIC_SUBMISSIONS = "public_submissions";
  @javax.annotation.Nonnull
  private Boolean publicSubmissions;

  public static final String JSON_PROPERTY_PUBLIC_WEB_FORM = "public_web_form";
  @javax.annotation.Nonnull
  private Boolean publicWebForm;

  public static final String JSON_PROPERTY_REDIRECT_URL = "redirect_url";
  @javax.annotation.Nullable
  private String redirectUrl;

  public static final String JSON_PROPERTY_SLACK_WEBHOOK_URL = "slack_webhook_url";
  @javax.annotation.Nullable
  private String slackWebhookUrl;

  /**
   * Gets or Sets templateType
   */
  public enum TemplateTypeEnum {
    PDF(String.valueOf("pdf")),
    
    HTML(String.valueOf("html"));

    private String value;

    TemplateTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TemplateTypeEnum fromValue(String value) {
      for (TemplateTypeEnum b : TemplateTypeEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TEMPLATE_TYPE = "template_type";
  @javax.annotation.Nonnull
  private TemplateTypeEnum templateType;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  @javax.annotation.Nullable
  private String updatedAt;

  public static final String JSON_PROPERTY_WEBHOOK_URL = "webhook_url";
  @javax.annotation.Nullable
  private String webhookUrl;

  public static final String JSON_PROPERTY_DEMO = "demo";
  @javax.annotation.Nonnull
  private Boolean demo;

  public static final String JSON_PROPERTY_DEFAULTS = "defaults";
  @javax.annotation.Nonnull
  private Object defaults;

  public static final String JSON_PROPERTY_FIELD_ORDER = "field_order";
  @javax.annotation.Nonnull
  private List<List<BigDecimal>> fieldOrder = new ArrayList<>();

  public static final String JSON_PROPERTY_FIELDS = "fields";
  @javax.annotation.Nonnull
  private Object fields;

  public static final String JSON_PROPERTY_FOOTER_HTML = "footer_html";
  @javax.annotation.Nullable
  private String footerHtml;

  public static final String JSON_PROPERTY_HEADER_HTML = "header_html";
  @javax.annotation.Nullable
  private String headerHtml;

  public static final String JSON_PROPERTY_HTML_ENGINE_OPTIONS = "html_engine_options";
  @javax.annotation.Nonnull
  private Object htmlEngineOptions;

  public static final String JSON_PROPERTY_HTML = "html";
  @javax.annotation.Nullable
  private String html;

  public static final String JSON_PROPERTY_PREDEFINED_FIELDS = "predefined_fields";
  @javax.annotation.Nonnull
  private List<Object> predefinedFields = new ArrayList<>();

  public static final String JSON_PROPERTY_SCSS = "scss";
  @javax.annotation.Nullable
  private String scss;

  public static final String JSON_PROPERTY_SHARED_FIELD_DATA = "shared_field_data";
  @javax.annotation.Nonnull
  private Object sharedFieldData;

  public Template() { 
  }

  public Template addDataRequestSubmissionIdFooters(@javax.annotation.Nonnull Boolean addDataRequestSubmissionIdFooters) {
    this.addDataRequestSubmissionIdFooters = addDataRequestSubmissionIdFooters;
    return this;
  }

  /**
   * Get addDataRequestSubmissionIdFooters
   * @return addDataRequestSubmissionIdFooters
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADD_DATA_REQUEST_SUBMISSION_ID_FOOTERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAddDataRequestSubmissionIdFooters() {
    return addDataRequestSubmissionIdFooters;
  }


  @JsonProperty(JSON_PROPERTY_ADD_DATA_REQUEST_SUBMISSION_ID_FOOTERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddDataRequestSubmissionIdFooters(@javax.annotation.Nonnull Boolean addDataRequestSubmissionIdFooters) {
    this.addDataRequestSubmissionIdFooters = addDataRequestSubmissionIdFooters;
  }


  public Template allowAdditionalProperties(@javax.annotation.Nonnull Boolean allowAdditionalProperties) {
    this.allowAdditionalProperties = allowAdditionalProperties;
    return this;
  }

  /**
   * Get allowAdditionalProperties
   * @return allowAdditionalProperties
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALLOW_ADDITIONAL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowAdditionalProperties() {
    return allowAdditionalProperties;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_ADDITIONAL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowAdditionalProperties(@javax.annotation.Nonnull Boolean allowAdditionalProperties) {
    this.allowAdditionalProperties = allowAdditionalProperties;
  }


  public Template description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public Template documentFilename(@javax.annotation.Nullable String documentFilename) {
    this.documentFilename = documentFilename;
    return this;
  }

  /**
   * Get documentFilename
   * @return documentFilename
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_FILENAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocumentFilename() {
    return documentFilename;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_FILENAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentFilename(@javax.annotation.Nullable String documentFilename) {
    this.documentFilename = documentFilename;
  }


  public Template documentMd5(@javax.annotation.Nullable String documentMd5) {
    this.documentMd5 = documentMd5;
    return this;
  }

  /**
   * Get documentMd5
   * @return documentMd5
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_MD5)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocumentMd5() {
    return documentMd5;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_MD5)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentMd5(@javax.annotation.Nullable String documentMd5) {
    this.documentMd5 = documentMd5;
  }


  public Template documentParseError(@javax.annotation.Nonnull Boolean documentParseError) {
    this.documentParseError = documentParseError;
    return this;
  }

  /**
   * Get documentParseError
   * @return documentParseError
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOCUMENT_PARSE_ERROR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDocumentParseError() {
    return documentParseError;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_PARSE_ERROR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentParseError(@javax.annotation.Nonnull Boolean documentParseError) {
    this.documentParseError = documentParseError;
  }


  public Template documentProcessed(@javax.annotation.Nonnull Boolean documentProcessed) {
    this.documentProcessed = documentProcessed;
    return this;
  }

  /**
   * Get documentProcessed
   * @return documentProcessed
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOCUMENT_PROCESSED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDocumentProcessed() {
    return documentProcessed;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_PROCESSED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentProcessed(@javax.annotation.Nonnull Boolean documentProcessed) {
    this.documentProcessed = documentProcessed;
  }


  public Template documentState(@javax.annotation.Nonnull DocumentStateEnum documentState) {
    this.documentState = documentState;
    return this;
  }

  /**
   * Get documentState
   * @return documentState
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOCUMENT_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DocumentStateEnum getDocumentState() {
    return documentState;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentState(@javax.annotation.Nonnull DocumentStateEnum documentState) {
    this.documentState = documentState;
  }


  public Template documentUrl(@javax.annotation.Nullable String documentUrl) {
    this.documentUrl = documentUrl;
    return this;
  }

  /**
   * Get documentUrl
   * @return documentUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocumentUrl() {
    return documentUrl;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentUrl(@javax.annotation.Nullable String documentUrl) {
    this.documentUrl = documentUrl;
  }


  public Template editableSubmissions(@javax.annotation.Nonnull Boolean editableSubmissions) {
    this.editableSubmissions = editableSubmissions;
    return this;
  }

  /**
   * Get editableSubmissions
   * @return editableSubmissions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EDITABLE_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEditableSubmissions() {
    return editableSubmissions;
  }


  @JsonProperty(JSON_PROPERTY_EDITABLE_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEditableSubmissions(@javax.annotation.Nonnull Boolean editableSubmissions) {
    this.editableSubmissions = editableSubmissions;
  }


  public Template embedDomains(@javax.annotation.Nullable String embedDomains) {
    this.embedDomains = embedDomains;
    return this;
  }

  /**
   * Get embedDomains
   * @return embedDomains
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMBED_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmbedDomains() {
    return embedDomains;
  }


  @JsonProperty(JSON_PROPERTY_EMBED_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmbedDomains(@javax.annotation.Nullable String embedDomains) {
    this.embedDomains = embedDomains;
  }


  public Template encryptPdfsPassword(@javax.annotation.Nullable String encryptPdfsPassword) {
    this.encryptPdfsPassword = encryptPdfsPassword;
    return this;
  }

  /**
   * Get encryptPdfsPassword
   * @return encryptPdfsPassword
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPT_PDFS_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEncryptPdfsPassword() {
    return encryptPdfsPassword;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPT_PDFS_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEncryptPdfsPassword(@javax.annotation.Nullable String encryptPdfsPassword) {
    this.encryptPdfsPassword = encryptPdfsPassword;
  }


  public Template encryptPdfs(@javax.annotation.Nonnull Boolean encryptPdfs) {
    this.encryptPdfs = encryptPdfs;
    return this;
  }

  /**
   * Get encryptPdfs
   * @return encryptPdfs
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENCRYPT_PDFS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEncryptPdfs() {
    return encryptPdfs;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPT_PDFS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEncryptPdfs(@javax.annotation.Nonnull Boolean encryptPdfs) {
    this.encryptPdfs = encryptPdfs;
  }


  public Template expirationInterval(@javax.annotation.Nonnull String expirationInterval) {
    this.expirationInterval = expirationInterval;
    return this;
  }

  /**
   * Get expirationInterval
   * @return expirationInterval
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRATION_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExpirationInterval() {
    return expirationInterval;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpirationInterval(@javax.annotation.Nonnull String expirationInterval) {
    this.expirationInterval = expirationInterval;
  }


  public Template expireAfter(@javax.annotation.Nonnull Integer expireAfter) {
    this.expireAfter = expireAfter;
    return this;
  }

  /**
   * Get expireAfter
   * @return expireAfter
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRE_AFTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getExpireAfter() {
    return expireAfter;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRE_AFTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpireAfter(@javax.annotation.Nonnull Integer expireAfter) {
    this.expireAfter = expireAfter;
  }


  public Template expireSubmissions(@javax.annotation.Nonnull Boolean expireSubmissions) {
    this.expireSubmissions = expireSubmissions;
    return this;
  }

  /**
   * Get expireSubmissions
   * @return expireSubmissions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRE_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getExpireSubmissions() {
    return expireSubmissions;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRE_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpireSubmissions(@javax.annotation.Nonnull Boolean expireSubmissions) {
    this.expireSubmissions = expireSubmissions;
  }


  public Template externalPredefinedFieldsTemplateId(@javax.annotation.Nullable String externalPredefinedFieldsTemplateId) {
    this.externalPredefinedFieldsTemplateId = externalPredefinedFieldsTemplateId;
    return this;
  }

  /**
   * Get externalPredefinedFieldsTemplateId
   * @return externalPredefinedFieldsTemplateId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalPredefinedFieldsTemplateId() {
    return externalPredefinedFieldsTemplateId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalPredefinedFieldsTemplateId(@javax.annotation.Nullable String externalPredefinedFieldsTemplateId) {
    this.externalPredefinedFieldsTemplateId = externalPredefinedFieldsTemplateId;
  }


  public Template externalPredefinedFieldsTemplateName(@javax.annotation.Nullable String externalPredefinedFieldsTemplateName) {
    this.externalPredefinedFieldsTemplateName = externalPredefinedFieldsTemplateName;
    return this;
  }

  /**
   * Get externalPredefinedFieldsTemplateName
   * @return externalPredefinedFieldsTemplateName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalPredefinedFieldsTemplateName() {
    return externalPredefinedFieldsTemplateName;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_PREDEFINED_FIELDS_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalPredefinedFieldsTemplateName(@javax.annotation.Nullable String externalPredefinedFieldsTemplateName) {
    this.externalPredefinedFieldsTemplateName = externalPredefinedFieldsTemplateName;
  }


  public Template firstTemplate(@javax.annotation.Nonnull Boolean firstTemplate) {
    this.firstTemplate = firstTemplate;
    return this;
  }

  /**
   * Get firstTemplate
   * @return firstTemplate
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getFirstTemplate() {
    return firstTemplate;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstTemplate(@javax.annotation.Nonnull Boolean firstTemplate) {
    this.firstTemplate = firstTemplate;
  }


  public Template id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public Template locked(@javax.annotation.Nonnull Boolean locked) {
    this.locked = locked;
    return this;
  }

  /**
   * Get locked
   * @return locked
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getLocked() {
    return locked;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocked(@javax.annotation.Nonnull Boolean locked) {
    this.locked = locked;
  }


  public Template mergeAuditTrailPdf(@javax.annotation.Nonnull Boolean mergeAuditTrailPdf) {
    this.mergeAuditTrailPdf = mergeAuditTrailPdf;
    return this;
  }

  /**
   * Get mergeAuditTrailPdf
   * @return mergeAuditTrailPdf
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERGE_AUDIT_TRAIL_PDF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMergeAuditTrailPdf() {
    return mergeAuditTrailPdf;
  }


  @JsonProperty(JSON_PROPERTY_MERGE_AUDIT_TRAIL_PDF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMergeAuditTrailPdf(@javax.annotation.Nonnull Boolean mergeAuditTrailPdf) {
    this.mergeAuditTrailPdf = mergeAuditTrailPdf;
  }


  public Template name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public Template pageCount(@javax.annotation.Nonnull Integer pageCount) {
    this.pageCount = pageCount;
    return this;
  }

  /**
   * Get pageCount
   * @return pageCount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPageCount() {
    return pageCount;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPageCount(@javax.annotation.Nonnull Integer pageCount) {
    this.pageCount = pageCount;
  }


  public Template pageDimensions(@javax.annotation.Nullable List<List<BigDecimal>> pageDimensions) {
    this.pageDimensions = pageDimensions;
    return this;
  }

  public Template addPageDimensionsItem(List<BigDecimal> pageDimensionsItem) {
    if (this.pageDimensions == null) {
      this.pageDimensions = new ArrayList<>();
    }
    this.pageDimensions.add(pageDimensionsItem);
    return this;
  }

  /**
   * Get pageDimensions
   * @return pageDimensions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<BigDecimal>> getPageDimensions() {
    return pageDimensions;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPageDimensions(@javax.annotation.Nullable List<List<BigDecimal>> pageDimensions) {
    this.pageDimensions = pageDimensions;
  }


  public Template parentFolderId(@javax.annotation.Nullable String parentFolderId) {
    this.parentFolderId = parentFolderId;
    return this;
  }

  /**
   * Get parentFolderId
   * @return parentFolderId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getParentFolderId() {
    return parentFolderId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParentFolderId(@javax.annotation.Nullable String parentFolderId) {
    this.parentFolderId = parentFolderId;
  }


  public Template path(@javax.annotation.Nullable String path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPath(@javax.annotation.Nullable String path) {
    this.path = path;
  }


  public Template permanentDocumentUrl(@javax.annotation.Nullable String permanentDocumentUrl) {
    this.permanentDocumentUrl = permanentDocumentUrl;
    return this;
  }

  /**
   * Get permanentDocumentUrl
   * @return permanentDocumentUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERMANENT_DOCUMENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPermanentDocumentUrl() {
    return permanentDocumentUrl;
  }


  @JsonProperty(JSON_PROPERTY_PERMANENT_DOCUMENT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermanentDocumentUrl(@javax.annotation.Nullable String permanentDocumentUrl) {
    this.permanentDocumentUrl = permanentDocumentUrl;
  }


  public Template publicSubmissions(@javax.annotation.Nonnull Boolean publicSubmissions) {
    this.publicSubmissions = publicSubmissions;
    return this;
  }

  /**
   * Get publicSubmissions
   * @return publicSubmissions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PUBLIC_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPublicSubmissions() {
    return publicSubmissions;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPublicSubmissions(@javax.annotation.Nonnull Boolean publicSubmissions) {
    this.publicSubmissions = publicSubmissions;
  }


  public Template publicWebForm(@javax.annotation.Nonnull Boolean publicWebForm) {
    this.publicWebForm = publicWebForm;
    return this;
  }

  /**
   * Get publicWebForm
   * @return publicWebForm
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PUBLIC_WEB_FORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPublicWebForm() {
    return publicWebForm;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_WEB_FORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPublicWebForm(@javax.annotation.Nonnull Boolean publicWebForm) {
    this.publicWebForm = publicWebForm;
  }


  public Template redirectUrl(@javax.annotation.Nullable String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

  /**
   * Get redirectUrl
   * @return redirectUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDIRECT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRedirectUrl() {
    return redirectUrl;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRedirectUrl(@javax.annotation.Nullable String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }


  public Template slackWebhookUrl(@javax.annotation.Nullable String slackWebhookUrl) {
    this.slackWebhookUrl = slackWebhookUrl;
    return this;
  }

  /**
   * Get slackWebhookUrl
   * @return slackWebhookUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLACK_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSlackWebhookUrl() {
    return slackWebhookUrl;
  }


  @JsonProperty(JSON_PROPERTY_SLACK_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlackWebhookUrl(@javax.annotation.Nullable String slackWebhookUrl) {
    this.slackWebhookUrl = slackWebhookUrl;
  }


  public Template templateType(@javax.annotation.Nonnull TemplateTypeEnum templateType) {
    this.templateType = templateType;
    return this;
  }

  /**
   * Get templateType
   * @return templateType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMPLATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TemplateTypeEnum getTemplateType() {
    return templateType;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemplateType(@javax.annotation.Nonnull TemplateTypeEnum templateType) {
    this.templateType = templateType;
  }


  public Template updatedAt(@javax.annotation.Nullable String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nullable String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Template webhookUrl(@javax.annotation.Nullable String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

  /**
   * Get webhookUrl
   * @return webhookUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWebhookUrl() {
    return webhookUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebhookUrl(@javax.annotation.Nullable String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  public Template demo(@javax.annotation.Nonnull Boolean demo) {
    this.demo = demo;
    return this;
  }

  /**
   * Get demo
   * @return demo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEMO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDemo() {
    return demo;
  }


  @JsonProperty(JSON_PROPERTY_DEMO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDemo(@javax.annotation.Nonnull Boolean demo) {
    this.demo = demo;
  }


  public Template defaults(@javax.annotation.Nonnull Object defaults) {
    this.defaults = defaults;
    return this;
  }

  /**
   * Get defaults
   * @return defaults
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEFAULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDefaults() {
    return defaults;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaults(@javax.annotation.Nonnull Object defaults) {
    this.defaults = defaults;
  }


  public Template fieldOrder(@javax.annotation.Nonnull List<List<BigDecimal>> fieldOrder) {
    this.fieldOrder = fieldOrder;
    return this;
  }

  public Template addFieldOrderItem(List<BigDecimal> fieldOrderItem) {
    if (this.fieldOrder == null) {
      this.fieldOrder = new ArrayList<>();
    }
    this.fieldOrder.add(fieldOrderItem);
    return this;
  }

  /**
   * Get fieldOrder
   * @return fieldOrder
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIELD_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<BigDecimal>> getFieldOrder() {
    return fieldOrder;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFieldOrder(@javax.annotation.Nonnull List<List<BigDecimal>> fieldOrder) {
    this.fieldOrder = fieldOrder;
  }


  public Template fields(@javax.annotation.Nonnull Object fields) {
    this.fields = fields;
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFields(@javax.annotation.Nonnull Object fields) {
    this.fields = fields;
  }


  public Template footerHtml(@javax.annotation.Nullable String footerHtml) {
    this.footerHtml = footerHtml;
    return this;
  }

  /**
   * Get footerHtml
   * @return footerHtml
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOOTER_HTML)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFooterHtml() {
    return footerHtml;
  }


  @JsonProperty(JSON_PROPERTY_FOOTER_HTML)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFooterHtml(@javax.annotation.Nullable String footerHtml) {
    this.footerHtml = footerHtml;
  }


  public Template headerHtml(@javax.annotation.Nullable String headerHtml) {
    this.headerHtml = headerHtml;
    return this;
  }

  /**
   * Get headerHtml
   * @return headerHtml
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADER_HTML)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHeaderHtml() {
    return headerHtml;
  }


  @JsonProperty(JSON_PROPERTY_HEADER_HTML)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeaderHtml(@javax.annotation.Nullable String headerHtml) {
    this.headerHtml = headerHtml;
  }


  public Template htmlEngineOptions(@javax.annotation.Nonnull Object htmlEngineOptions) {
    this.htmlEngineOptions = htmlEngineOptions;
    return this;
  }

  /**
   * Get htmlEngineOptions
   * @return htmlEngineOptions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HTML_ENGINE_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getHtmlEngineOptions() {
    return htmlEngineOptions;
  }


  @JsonProperty(JSON_PROPERTY_HTML_ENGINE_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHtmlEngineOptions(@javax.annotation.Nonnull Object htmlEngineOptions) {
    this.htmlEngineOptions = htmlEngineOptions;
  }


  public Template html(@javax.annotation.Nullable String html) {
    this.html = html;
    return this;
  }

  /**
   * Get html
   * @return html
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHtml() {
    return html;
  }


  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHtml(@javax.annotation.Nullable String html) {
    this.html = html;
  }


  public Template predefinedFields(@javax.annotation.Nonnull List<Object> predefinedFields) {
    this.predefinedFields = predefinedFields;
    return this;
  }

  public Template addPredefinedFieldsItem(Object predefinedFieldsItem) {
    if (this.predefinedFields == null) {
      this.predefinedFields = new ArrayList<>();
    }
    this.predefinedFields.add(predefinedFieldsItem);
    return this;
  }

  /**
   * Get predefinedFields
   * @return predefinedFields
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PREDEFINED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getPredefinedFields() {
    return predefinedFields;
  }


  @JsonProperty(JSON_PROPERTY_PREDEFINED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPredefinedFields(@javax.annotation.Nonnull List<Object> predefinedFields) {
    this.predefinedFields = predefinedFields;
  }


  public Template scss(@javax.annotation.Nullable String scss) {
    this.scss = scss;
    return this;
  }

  /**
   * Get scss
   * @return scss
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCSS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getScss() {
    return scss;
  }


  @JsonProperty(JSON_PROPERTY_SCSS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScss(@javax.annotation.Nullable String scss) {
    this.scss = scss;
  }


  public Template sharedFieldData(@javax.annotation.Nonnull Object sharedFieldData) {
    this.sharedFieldData = sharedFieldData;
    return this;
  }

  /**
   * Get sharedFieldData
   * @return sharedFieldData
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHARED_FIELD_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSharedFieldData() {
    return sharedFieldData;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_FIELD_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSharedFieldData(@javax.annotation.Nonnull Object sharedFieldData) {
    this.sharedFieldData = sharedFieldData;
  }


  /**
   * Return true if this template object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Template template = (Template) o;
    return Objects.equals(this.addDataRequestSubmissionIdFooters, template.addDataRequestSubmissionIdFooters) &&
        Objects.equals(this.allowAdditionalProperties, template.allowAdditionalProperties) &&
        Objects.equals(this.description, template.description) &&
        Objects.equals(this.documentFilename, template.documentFilename) &&
        Objects.equals(this.documentMd5, template.documentMd5) &&
        Objects.equals(this.documentParseError, template.documentParseError) &&
        Objects.equals(this.documentProcessed, template.documentProcessed) &&
        Objects.equals(this.documentState, template.documentState) &&
        Objects.equals(this.documentUrl, template.documentUrl) &&
        Objects.equals(this.editableSubmissions, template.editableSubmissions) &&
        Objects.equals(this.embedDomains, template.embedDomains) &&
        Objects.equals(this.encryptPdfsPassword, template.encryptPdfsPassword) &&
        Objects.equals(this.encryptPdfs, template.encryptPdfs) &&
        Objects.equals(this.expirationInterval, template.expirationInterval) &&
        Objects.equals(this.expireAfter, template.expireAfter) &&
        Objects.equals(this.expireSubmissions, template.expireSubmissions) &&
        Objects.equals(this.externalPredefinedFieldsTemplateId, template.externalPredefinedFieldsTemplateId) &&
        Objects.equals(this.externalPredefinedFieldsTemplateName, template.externalPredefinedFieldsTemplateName) &&
        Objects.equals(this.firstTemplate, template.firstTemplate) &&
        Objects.equals(this.id, template.id) &&
        Objects.equals(this.locked, template.locked) &&
        Objects.equals(this.mergeAuditTrailPdf, template.mergeAuditTrailPdf) &&
        Objects.equals(this.name, template.name) &&
        Objects.equals(this.pageCount, template.pageCount) &&
        Objects.equals(this.pageDimensions, template.pageDimensions) &&
        Objects.equals(this.parentFolderId, template.parentFolderId) &&
        Objects.equals(this.path, template.path) &&
        Objects.equals(this.permanentDocumentUrl, template.permanentDocumentUrl) &&
        Objects.equals(this.publicSubmissions, template.publicSubmissions) &&
        Objects.equals(this.publicWebForm, template.publicWebForm) &&
        Objects.equals(this.redirectUrl, template.redirectUrl) &&
        Objects.equals(this.slackWebhookUrl, template.slackWebhookUrl) &&
        Objects.equals(this.templateType, template.templateType) &&
        Objects.equals(this.updatedAt, template.updatedAt) &&
        Objects.equals(this.webhookUrl, template.webhookUrl) &&
        Objects.equals(this.demo, template.demo) &&
        Objects.equals(this.defaults, template.defaults) &&
        Objects.equals(this.fieldOrder, template.fieldOrder) &&
        Objects.equals(this.fields, template.fields) &&
        Objects.equals(this.footerHtml, template.footerHtml) &&
        Objects.equals(this.headerHtml, template.headerHtml) &&
        Objects.equals(this.htmlEngineOptions, template.htmlEngineOptions) &&
        Objects.equals(this.html, template.html) &&
        Objects.equals(this.predefinedFields, template.predefinedFields) &&
        Objects.equals(this.scss, template.scss) &&
        Objects.equals(this.sharedFieldData, template.sharedFieldData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addDataRequestSubmissionIdFooters, allowAdditionalProperties, description, documentFilename, documentMd5, documentParseError, documentProcessed, documentState, documentUrl, editableSubmissions, embedDomains, encryptPdfsPassword, encryptPdfs, expirationInterval, expireAfter, expireSubmissions, externalPredefinedFieldsTemplateId, externalPredefinedFieldsTemplateName, firstTemplate, id, locked, mergeAuditTrailPdf, name, pageCount, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, slackWebhookUrl, templateType, updatedAt, webhookUrl, demo, defaults, fieldOrder, fields, footerHtml, headerHtml, htmlEngineOptions, html, predefinedFields, scss, sharedFieldData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Template {\n");
    sb.append("    addDataRequestSubmissionIdFooters: ").append(toIndentedString(addDataRequestSubmissionIdFooters)).append("\n");
    sb.append("    allowAdditionalProperties: ").append(toIndentedString(allowAdditionalProperties)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    documentFilename: ").append(toIndentedString(documentFilename)).append("\n");
    sb.append("    documentMd5: ").append(toIndentedString(documentMd5)).append("\n");
    sb.append("    documentParseError: ").append(toIndentedString(documentParseError)).append("\n");
    sb.append("    documentProcessed: ").append(toIndentedString(documentProcessed)).append("\n");
    sb.append("    documentState: ").append(toIndentedString(documentState)).append("\n");
    sb.append("    documentUrl: ").append(toIndentedString(documentUrl)).append("\n");
    sb.append("    editableSubmissions: ").append(toIndentedString(editableSubmissions)).append("\n");
    sb.append("    embedDomains: ").append(toIndentedString(embedDomains)).append("\n");
    sb.append("    encryptPdfsPassword: ").append(toIndentedString(encryptPdfsPassword)).append("\n");
    sb.append("    encryptPdfs: ").append(toIndentedString(encryptPdfs)).append("\n");
    sb.append("    expirationInterval: ").append(toIndentedString(expirationInterval)).append("\n");
    sb.append("    expireAfter: ").append(toIndentedString(expireAfter)).append("\n");
    sb.append("    expireSubmissions: ").append(toIndentedString(expireSubmissions)).append("\n");
    sb.append("    externalPredefinedFieldsTemplateId: ").append(toIndentedString(externalPredefinedFieldsTemplateId)).append("\n");
    sb.append("    externalPredefinedFieldsTemplateName: ").append(toIndentedString(externalPredefinedFieldsTemplateName)).append("\n");
    sb.append("    firstTemplate: ").append(toIndentedString(firstTemplate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    mergeAuditTrailPdf: ").append(toIndentedString(mergeAuditTrailPdf)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    pageDimensions: ").append(toIndentedString(pageDimensions)).append("\n");
    sb.append("    parentFolderId: ").append(toIndentedString(parentFolderId)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    permanentDocumentUrl: ").append(toIndentedString(permanentDocumentUrl)).append("\n");
    sb.append("    publicSubmissions: ").append(toIndentedString(publicSubmissions)).append("\n");
    sb.append("    publicWebForm: ").append(toIndentedString(publicWebForm)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    slackWebhookUrl: ").append(toIndentedString(slackWebhookUrl)).append("\n");
    sb.append("    templateType: ").append(toIndentedString(templateType)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    demo: ").append(toIndentedString(demo)).append("\n");
    sb.append("    defaults: ").append(toIndentedString(defaults)).append("\n");
    sb.append("    fieldOrder: ").append(toIndentedString(fieldOrder)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    footerHtml: ").append(toIndentedString(footerHtml)).append("\n");
    sb.append("    headerHtml: ").append(toIndentedString(headerHtml)).append("\n");
    sb.append("    htmlEngineOptions: ").append(toIndentedString(htmlEngineOptions)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    predefinedFields: ").append(toIndentedString(predefinedFields)).append("\n");
    sb.append("    scss: ").append(toIndentedString(scss)).append("\n");
    sb.append("    sharedFieldData: ").append(toIndentedString(sharedFieldData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

