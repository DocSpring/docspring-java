/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * SubmissionDataRequest
 */
@JsonPropertyOrder({
  SubmissionDataRequest.JSON_PROPERTY_ID,
  SubmissionDataRequest.JSON_PROPERTY_EMAIL,
  SubmissionDataRequest.JSON_PROPERTY_NAME,
  SubmissionDataRequest.JSON_PROPERTY_ORDER,
  SubmissionDataRequest.JSON_PROPERTY_SORT_ORDER,
  SubmissionDataRequest.JSON_PROPERTY_FIELDS,
  SubmissionDataRequest.JSON_PROPERTY_METADATA,
  SubmissionDataRequest.JSON_PROPERTY_STATE,
  SubmissionDataRequest.JSON_PROPERTY_VIEWED_AT,
  SubmissionDataRequest.JSON_PROPERTY_COMPLETED_AT,
  SubmissionDataRequest.JSON_PROPERTY_DATA,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_TYPE,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_SECOND_FACTOR_TYPE,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_PROVIDER,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_SESSION_STARTED_AT,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_SESSION_ID_HASH,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_USER_ID_HASH,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_USERNAME_HASH,
  SubmissionDataRequest.JSON_PROPERTY_AUTH_PHONE_NUMBER_HASH,
  SubmissionDataRequest.JSON_PROPERTY_IP_ADDRESS,
  SubmissionDataRequest.JSON_PROPERTY_USER_AGENT
})
@JsonTypeName("submission_data_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class SubmissionDataRequest {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nullable
  private String email;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_ORDER = "order";
  @javax.annotation.Nullable
  private Integer order;

  public static final String JSON_PROPERTY_SORT_ORDER = "sort_order";
  @javax.annotation.Nonnull
  private Integer sortOrder;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  @javax.annotation.Nullable
  private List<String> fields;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private Object metadata;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    PENDING(String.valueOf("pending")),
    
    COMPLETED(String.valueOf("completed"));

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nonnull
  private StateEnum state;

  public static final String JSON_PROPERTY_VIEWED_AT = "viewed_at";
  @javax.annotation.Nullable
  private String viewedAt;

  public static final String JSON_PROPERTY_COMPLETED_AT = "completed_at";
  @javax.annotation.Nullable
  private String completedAt;

  public static final String JSON_PROPERTY_DATA = "data";
  @javax.annotation.Nullable
  private Object data;

  /**
   * Gets or Sets authType
   */
  public enum AuthTypeEnum {
    NONE(String.valueOf("none")),
    
    PASSWORD(String.valueOf("password")),
    
    OAUTH(String.valueOf("oauth")),
    
    EMAIL_LINK(String.valueOf("email_link")),
    
    PHONE_NUMBER(String.valueOf("phone_number")),
    
    LDAP(String.valueOf("ldap")),
    
    SAML(String.valueOf("saml"));

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthTypeEnum fromValue(String value) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTH_TYPE = "auth_type";
  @javax.annotation.Nonnull
  private AuthTypeEnum authType;

  /**
   * Gets or Sets authSecondFactorType
   */
  public enum AuthSecondFactorTypeEnum {
    NONE(String.valueOf("none")),
    
    PHONE_NUMBER(String.valueOf("phone_number")),
    
    TOTP(String.valueOf("totp")),
    
    MOBILE_PUSH(String.valueOf("mobile_push")),
    
    SECURITY_KEY(String.valueOf("security_key")),
    
    FINGERPRINT(String.valueOf("fingerprint"));

    private String value;

    AuthSecondFactorTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthSecondFactorTypeEnum fromValue(String value) {
      for (AuthSecondFactorTypeEnum b : AuthSecondFactorTypeEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTH_SECOND_FACTOR_TYPE = "auth_second_factor_type";
  @javax.annotation.Nonnull
  private AuthSecondFactorTypeEnum authSecondFactorType;

  public static final String JSON_PROPERTY_AUTH_PROVIDER = "auth_provider";
  @javax.annotation.Nullable
  private String authProvider;

  public static final String JSON_PROPERTY_AUTH_SESSION_STARTED_AT = "auth_session_started_at";
  @javax.annotation.Nullable
  private String authSessionStartedAt;

  public static final String JSON_PROPERTY_AUTH_SESSION_ID_HASH = "auth_session_id_hash";
  @javax.annotation.Nullable
  private String authSessionIdHash;

  public static final String JSON_PROPERTY_AUTH_USER_ID_HASH = "auth_user_id_hash";
  @javax.annotation.Nullable
  private String authUserIdHash;

  public static final String JSON_PROPERTY_AUTH_USERNAME_HASH = "auth_username_hash";
  @javax.annotation.Nullable
  private String authUsernameHash;

  public static final String JSON_PROPERTY_AUTH_PHONE_NUMBER_HASH = "auth_phone_number_hash";
  @javax.annotation.Nullable
  private String authPhoneNumberHash;

  public static final String JSON_PROPERTY_IP_ADDRESS = "ip_address";
  @javax.annotation.Nullable
  private String ipAddress;

  public static final String JSON_PROPERTY_USER_AGENT = "user_agent";
  @javax.annotation.Nullable
  private String userAgent;

  public SubmissionDataRequest() { 
  }

  public SubmissionDataRequest id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public SubmissionDataRequest email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public SubmissionDataRequest name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public SubmissionDataRequest order(@javax.annotation.Nullable Integer order) {
    this.order = order;
    return this;
  }

  /**
   * Get order
   * @return order
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrder(@javax.annotation.Nullable Integer order) {
    this.order = order;
  }


  public SubmissionDataRequest sortOrder(@javax.annotation.Nonnull Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * @return sortOrder
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSortOrder() {
    return sortOrder;
  }


  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSortOrder(@javax.annotation.Nonnull Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public SubmissionDataRequest fields(@javax.annotation.Nullable List<String> fields) {
    this.fields = fields;
    return this;
  }

  public SubmissionDataRequest addFieldsItem(String fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFields(@javax.annotation.Nullable List<String> fields) {
    this.fields = fields;
  }


  public SubmissionDataRequest metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
  }


  public SubmissionDataRequest state(@javax.annotation.Nonnull StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(@javax.annotation.Nonnull StateEnum state) {
    this.state = state;
  }


  public SubmissionDataRequest viewedAt(@javax.annotation.Nullable String viewedAt) {
    this.viewedAt = viewedAt;
    return this;
  }

  /**
   * Get viewedAt
   * @return viewedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEWED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getViewedAt() {
    return viewedAt;
  }


  @JsonProperty(JSON_PROPERTY_VIEWED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setViewedAt(@javax.annotation.Nullable String viewedAt) {
    this.viewedAt = viewedAt;
  }


  public SubmissionDataRequest completedAt(@javax.annotation.Nullable String completedAt) {
    this.completedAt = completedAt;
    return this;
  }

  /**
   * Get completedAt
   * @return completedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCompletedAt() {
    return completedAt;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompletedAt(@javax.annotation.Nullable String completedAt) {
    this.completedAt = completedAt;
  }


  public SubmissionDataRequest data(@javax.annotation.Nullable Object data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(@javax.annotation.Nullable Object data) {
    this.data = data;
  }


  public SubmissionDataRequest authType(@javax.annotation.Nonnull AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

  /**
   * Get authType
   * @return authType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuthTypeEnum getAuthType() {
    return authType;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthType(@javax.annotation.Nonnull AuthTypeEnum authType) {
    this.authType = authType;
  }


  public SubmissionDataRequest authSecondFactorType(@javax.annotation.Nonnull AuthSecondFactorTypeEnum authSecondFactorType) {
    this.authSecondFactorType = authSecondFactorType;
    return this;
  }

  /**
   * Get authSecondFactorType
   * @return authSecondFactorType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTH_SECOND_FACTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuthSecondFactorTypeEnum getAuthSecondFactorType() {
    return authSecondFactorType;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_SECOND_FACTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthSecondFactorType(@javax.annotation.Nonnull AuthSecondFactorTypeEnum authSecondFactorType) {
    this.authSecondFactorType = authSecondFactorType;
  }


  public SubmissionDataRequest authProvider(@javax.annotation.Nullable String authProvider) {
    this.authProvider = authProvider;
    return this;
  }

  /**
   * Get authProvider
   * @return authProvider
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthProvider() {
    return authProvider;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthProvider(@javax.annotation.Nullable String authProvider) {
    this.authProvider = authProvider;
  }


  public SubmissionDataRequest authSessionStartedAt(@javax.annotation.Nullable String authSessionStartedAt) {
    this.authSessionStartedAt = authSessionStartedAt;
    return this;
  }

  /**
   * Get authSessionStartedAt
   * @return authSessionStartedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_SESSION_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthSessionStartedAt() {
    return authSessionStartedAt;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_SESSION_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthSessionStartedAt(@javax.annotation.Nullable String authSessionStartedAt) {
    this.authSessionStartedAt = authSessionStartedAt;
  }


  public SubmissionDataRequest authSessionIdHash(@javax.annotation.Nullable String authSessionIdHash) {
    this.authSessionIdHash = authSessionIdHash;
    return this;
  }

  /**
   * Get authSessionIdHash
   * @return authSessionIdHash
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_SESSION_ID_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthSessionIdHash() {
    return authSessionIdHash;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_SESSION_ID_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthSessionIdHash(@javax.annotation.Nullable String authSessionIdHash) {
    this.authSessionIdHash = authSessionIdHash;
  }


  public SubmissionDataRequest authUserIdHash(@javax.annotation.Nullable String authUserIdHash) {
    this.authUserIdHash = authUserIdHash;
    return this;
  }

  /**
   * Get authUserIdHash
   * @return authUserIdHash
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_USER_ID_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthUserIdHash() {
    return authUserIdHash;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_USER_ID_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthUserIdHash(@javax.annotation.Nullable String authUserIdHash) {
    this.authUserIdHash = authUserIdHash;
  }


  public SubmissionDataRequest authUsernameHash(@javax.annotation.Nullable String authUsernameHash) {
    this.authUsernameHash = authUsernameHash;
    return this;
  }

  /**
   * Get authUsernameHash
   * @return authUsernameHash
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_USERNAME_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthUsernameHash() {
    return authUsernameHash;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_USERNAME_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthUsernameHash(@javax.annotation.Nullable String authUsernameHash) {
    this.authUsernameHash = authUsernameHash;
  }


  public SubmissionDataRequest authPhoneNumberHash(@javax.annotation.Nullable String authPhoneNumberHash) {
    this.authPhoneNumberHash = authPhoneNumberHash;
    return this;
  }

  /**
   * Get authPhoneNumberHash
   * @return authPhoneNumberHash
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_PHONE_NUMBER_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthPhoneNumberHash() {
    return authPhoneNumberHash;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_PHONE_NUMBER_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthPhoneNumberHash(@javax.annotation.Nullable String authPhoneNumberHash) {
    this.authPhoneNumberHash = authPhoneNumberHash;
  }


  public SubmissionDataRequest ipAddress(@javax.annotation.Nullable String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIpAddress(@javax.annotation.Nullable String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public SubmissionDataRequest userAgent(@javax.annotation.Nullable String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  /**
   * Get userAgent
   * @return userAgent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_AGENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserAgent() {
    return userAgent;
  }


  @JsonProperty(JSON_PROPERTY_USER_AGENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserAgent(@javax.annotation.Nullable String userAgent) {
    this.userAgent = userAgent;
  }


  /**
   * Return true if this submission_data_request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionDataRequest submissionDataRequest = (SubmissionDataRequest) o;
    return Objects.equals(this.id, submissionDataRequest.id) &&
        Objects.equals(this.email, submissionDataRequest.email) &&
        Objects.equals(this.name, submissionDataRequest.name) &&
        Objects.equals(this.order, submissionDataRequest.order) &&
        Objects.equals(this.sortOrder, submissionDataRequest.sortOrder) &&
        Objects.equals(this.fields, submissionDataRequest.fields) &&
        Objects.equals(this.metadata, submissionDataRequest.metadata) &&
        Objects.equals(this.state, submissionDataRequest.state) &&
        Objects.equals(this.viewedAt, submissionDataRequest.viewedAt) &&
        Objects.equals(this.completedAt, submissionDataRequest.completedAt) &&
        Objects.equals(this.data, submissionDataRequest.data) &&
        Objects.equals(this.authType, submissionDataRequest.authType) &&
        Objects.equals(this.authSecondFactorType, submissionDataRequest.authSecondFactorType) &&
        Objects.equals(this.authProvider, submissionDataRequest.authProvider) &&
        Objects.equals(this.authSessionStartedAt, submissionDataRequest.authSessionStartedAt) &&
        Objects.equals(this.authSessionIdHash, submissionDataRequest.authSessionIdHash) &&
        Objects.equals(this.authUserIdHash, submissionDataRequest.authUserIdHash) &&
        Objects.equals(this.authUsernameHash, submissionDataRequest.authUsernameHash) &&
        Objects.equals(this.authPhoneNumberHash, submissionDataRequest.authPhoneNumberHash) &&
        Objects.equals(this.ipAddress, submissionDataRequest.ipAddress) &&
        Objects.equals(this.userAgent, submissionDataRequest.userAgent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, name, order, sortOrder, fields, metadata, state, viewedAt, completedAt, data, authType, authSecondFactorType, authProvider, authSessionStartedAt, authSessionIdHash, authUserIdHash, authUsernameHash, authPhoneNumberHash, ipAddress, userAgent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionDataRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    viewedAt: ").append(toIndentedString(viewedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    authSecondFactorType: ").append(toIndentedString(authSecondFactorType)).append("\n");
    sb.append("    authProvider: ").append(toIndentedString(authProvider)).append("\n");
    sb.append("    authSessionStartedAt: ").append(toIndentedString(authSessionStartedAt)).append("\n");
    sb.append("    authSessionIdHash: ").append(toIndentedString(authSessionIdHash)).append("\n");
    sb.append("    authUserIdHash: ").append(toIndentedString(authUserIdHash)).append("\n");
    sb.append("    authUsernameHash: ").append(toIndentedString(authUsernameHash)).append("\n");
    sb.append("    authPhoneNumberHash: ").append(toIndentedString(authPhoneNumberHash)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

