/*
 * DocSpring API
 * DocSpring provides an API that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docspring;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.docspring.JSON;


/**
 * TemplateDeleteResponse
 */
@JsonPropertyOrder({
  TemplateDeleteResponse.JSON_PROPERTY_STATUS,
  TemplateDeleteResponse.JSON_PROPERTY_ERRORS,
  TemplateDeleteResponse.JSON_PROPERTY_LATEST_VERSION,
  TemplateDeleteResponse.JSON_PROPERTY_VERSIONS
})
@JsonTypeName("template_delete_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class TemplateDeleteResponse {
  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SUCCESS(String.valueOf("success")),
    
    ERROR(String.valueOf("error"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equalsIgnoreCase(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private StatusEnum status;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  @javax.annotation.Nullable
  private List<String> errors = new ArrayList<>();

  public static final String JSON_PROPERTY_LATEST_VERSION = "latest_version";
  private JsonNullable<String> latestVersion = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSIONS = "versions";
  @javax.annotation.Nullable
  private List<Object> versions = new ArrayList<>();

  public TemplateDeleteResponse() { 
  }

  public TemplateDeleteResponse status(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }


  public TemplateDeleteResponse errors(@javax.annotation.Nullable List<String> errors) {
    this.errors = errors;
    return this;
  }

  public TemplateDeleteResponse addErrorsItem(String errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(@javax.annotation.Nullable List<String> errors) {
    this.errors = errors;
  }


  public TemplateDeleteResponse latestVersion(@javax.annotation.Nullable String latestVersion) {
    this.latestVersion = JsonNullable.<String>of(latestVersion);
    return this;
  }

  /**
   * Get latestVersion
   * @return latestVersion
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLatestVersion() {
        return latestVersion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LATEST_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLatestVersion_JsonNullable() {
    return latestVersion;
  }
  
  @JsonProperty(JSON_PROPERTY_LATEST_VERSION)
  public void setLatestVersion_JsonNullable(JsonNullable<String> latestVersion) {
    this.latestVersion = latestVersion;
  }

  public void setLatestVersion(@javax.annotation.Nullable String latestVersion) {
    this.latestVersion = JsonNullable.<String>of(latestVersion);
  }


  public TemplateDeleteResponse versions(@javax.annotation.Nullable List<Object> versions) {
    this.versions = versions;
    return this;
  }

  public TemplateDeleteResponse addVersionsItem(Object versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<>();
    }
    this.versions.add(versionsItem);
    return this;
  }

  /**
   * Get versions
   * @return versions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getVersions() {
    return versions;
  }


  @JsonProperty(JSON_PROPERTY_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersions(@javax.annotation.Nullable List<Object> versions) {
    this.versions = versions;
  }


  /**
   * Return true if this template_delete_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateDeleteResponse templateDeleteResponse = (TemplateDeleteResponse) o;
    return Objects.equals(this.status, templateDeleteResponse.status) &&
        Objects.equals(this.errors, templateDeleteResponse.errors) &&
        equalsNullable(this.latestVersion, templateDeleteResponse.latestVersion) &&
        Objects.equals(this.versions, templateDeleteResponse.versions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, errors, hashCodeNullable(latestVersion), versions);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateDeleteResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    latestVersion: ").append(toIndentedString(latestVersion)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

